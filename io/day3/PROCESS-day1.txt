DroidEdit
操作系统必须负责程序的独立操作并保护资源不受非法操作。
	进程

（一）进程的概念（了解）
	
	程序：代码段、数据段
		size  

			静态 
	进程：  动态 
	进程的控制函数相关操作：


（二）进程包含的内容（理解）

	进程和程序的组成部分
	程序：代码段、数据段
	进程：代码段、用户数据段、系统数据段

	系统数据段（包含）
		1、进程控制块

			进程标识符PID：  唯一的表示一个进程
			状态、优先级

			文件描述符表
			pc
			栈

		2、进程类型
			1）交互进程
				
				前台进程:既可以输入，也可以输出
				
				后台进程:不可以输入，但可以输出

			2）批处理进程
				gcc  main.c -o  main

			3）守护进程

				后台进程：  做服务使用

（三）进程的状态（理解）

	ps     查看系统中的进程

	top    动态显示系统中的进程
			每个三秒钟显示进程信息
注意nice和renice指定优先级时，前面小横杠
	nice   按用户指定的优先级运行进程
		nice  -12   ./while           指定while的优先级为12
		nice  --8   ./while           指定pid的优先级为-8
	renice   改变正在运行进程的优先级
		renice 15    pid          指定pid的优先级为15
		sudo renice -15  pid   指定pid的优先级为-15
 	kill   结束进程(包括后台进程)    kill -l
		kill -9 pid

	bg  将挂起的进程在后台执行
		先使用ctrl+z(只能挂起前台进程，想要挂起后台进程需要使用kill命令)挂起进程，在使用bg命令恢复运行

	fg  把挂起进程放到前台运行
		先使用ctrl+z挂起进程，在使用fg命令恢复运行



（四）进程所需要的命令


进程的控制函数相关操作：

	1）进程的创建和退出--fork和exit

	fork()

	exit()/_exit()

		exit:结束进程，并且刷新缓冲区中的内容
		_exit:结束进程，不会刷新缓冲区中的内容
			成功退出：EXIT_SUCCESS    0
			失败退出：EXIT_FAILURE    1

		pit_t getpid();
		功能：获取当前调用进程的进程号
		pit_t getppid();
		功能：获取当前调用进程的父亲进程的进程号

		注意：上面使用时应注意两者的区别

		练习题：
		1、僵尸进程：
			子进程退出，父亲进程没有回收子进程的PCB资源

		2、孤儿进程：
			父进程退出，子进程有1号（init）作为父进程
	2）进程资源的回收--wait和waitpid

		wait()
		功能：等待任意一个子进程状态的改变

		waitpid（pid， &status, options）
		功能：等待子进程状态的改变
		参数：
		pid < -1  等待进程等于pid的绝对值的那个组里的所有子进程
		pid = -1  等待任意一个子进程
		pid = 0    等待组进程号等于调用进程的进程号里的所有子进程
		pid > 0   指定要等待的 进程是pid

		options
			0，阻塞等待的方式
			WNOHANG：非阻塞等待的方式


	3）exec函数族和system函数

	功能：在一个程序当中去执行另外一个程序。可以是可执行程序，也可以是可执行脚本，通过绝对路径和相对路径的方式找到可执行程序，

	exec函数会清空原有进程当中的数据。

	为什么要使用它？
		使用别人编译好的程序，可以增强自己代码的功能，并且提高一定的效率
		


















































