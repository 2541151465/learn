条件变量：
	定义：
		一个线程临界资源状态的变化，会通知另外一个线程去做相应的功能处理
		条件变量跟互斥锁配合使用

	特点:
		具有阻塞功能
				唤醒

*****************************进程间通信************************************

为什么需要进程间通信？
	1、数据交互
	2、共享资源
	3、信号通知
	4、同步或者互斥

进程间通信方式介绍：（了解）
	1、传统的进程间通信
		无名管道、有名管道、信号通知
	2、sytem V  --   IPC
		共享内存、消息队列、信号量

		前面六种只能用于单台的计算机中使用

	3、套接字

（一）无名管道
	通信框架:
		无名管道是一块内核缓冲区
		在文件系统当中找不到名字，不能通过路径的方式打开无名管道
		pipe

【1】无名管道特点（了解）
	1、用于就有亲缘关系的进程间通信
	2、半双工的通信方式，具有固定的读端和写端
	3、在文件系统中不可见，并且不可以使用open、lseek函数

读写方式：

【2】无名管道创建（熟练）
函数原型：

管道大小：

【注意】
当管道写端存在的时候，
	如果管道没有数据，读操作是阻塞，
	如果有数据，会把管道当中的数据读取出来


当管道写端不存在时：（close[fd[1]]）
	如果有数据，可以读取管道当中的数据
	如果没有数据会read函数立即释放	


当读端关闭时；会出现管道破裂（不能往里面写入数据）-->  Broken PIPE



（二）有名管道
为什么又出现了有名管道？

【1】有名管道的特点
1、在文件系统当中可见，文件根有名管道相关联
2、可以通过open指定读或者写
3、可以应用于不同的进程间通信

【2】有名管道的创建

	int mkfifo()
	功能：创建有名管道
	参数： 
	pathname ： 有名管道的名称
	mode： 指定有名管道的权限
	返回值： 成功  0
			 失败  -1

【3】读写有名管道
	

（三）信号

【1】信号机制（了解）

信号响应方式：
忽略
默认
捕捉
【2】常用信号
查看信号的种类
						默认操作：结束进程
2    SIGINT  ctrl+c     结束进程
3    SIGQUIT ctrl+\     结束进程
9    SIGKILL            结束进程

10   SIGUSR1			结束进程
12   SIGUSR2            结束进程

14   SIGALRM            结束进程
19   SIGSTOP            暂停进程
20   SIGTSTP ctrl+z     暂停进程


SIGKILL 和SIGSTOP不能被忽略或者捕捉 

【3】信号相关函数
发送信号函数

kill
可以给自己或者其他进程发送信号


raise
只能给自己发送信号，其中不能发送SIGQUIT

闹钟函数
alarm
用于设定闹钟的时间值
返回值：
在alarm函数之前没有调用alarm函数，则alarm的返回值是0

如果在alarm函数之前已经调用了一次alarm函数再返回上一个alarm函数的闹钟剩余值。

signal函数请看练习signal.c

alarm(unsigned int seconds)
功能：设定定时器的秒数
秒数是大于或者等于0 的整数
如果指定为0，表示结束定时器
如果大于0，表示设定定时器定时多长时间


pause()
功能：引起调用进程进程阻塞，知道收到信号才会立即结束


signal（int signum， sighandler_t handler）
功能：信号响应函数
参数：
signum：信号种类中的一种，跟handler关联起来，执行相应的处理方式
	忽略  SIG_IGN、
	默认  SIG_DFL、
	捕捉  -->自己定义一个信号处理函数，类型跟sighandler_t的形式一致
	把linux中已经定义好的62种信号中的一种信号跟linux传递给进程的信号signo做判断，看是那种信号，再做相应的处理









